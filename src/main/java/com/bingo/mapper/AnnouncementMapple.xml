<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bingo.dao.IAnnouncementDao">
	<!-- <cache  eviction="FIFO"  flushInterval="60000"  size="512"  readOnly="true"/> -->
	<!--LRU – 最近最少使用的:移除最长时间不被使用的对象。
		FIFO – 先进先出:按对象进入缓存的顺序来移除它们。
		SOFT – 软引用:移除基于垃圾回收器状态和软引用规则的对象。
		WEAK – 弱引用:更积极地移除基于垃圾收集器状态和弱引用规则的对象。 -->
		<!-- flushInterval(刷新间隔)可以被设置为任意的正整数,而且它们代表一个合理的毫秒 形式的时间段。默认情况是不设置,也就是没有刷新间隔,缓存仅仅调用语句时刷新。
		size(引用数目)可以被设置为任意正整数,要记住你缓存的对象数目和你运行环境的 可用内存资源数目。默认值是1024。
		readOnly(只读)属性可以被设置为 true 或 false。只读的缓存会给所有调用者返回缓 存对象的相同实例。
		因此这些对象不能被修改。这提供了很重要的性能优势。
		可读写的缓存 会返回缓存对象的拷贝(通过序列化) 。这会慢一些,但是安全,因此默认是 false。 -->
   <!--  <cache /> -->
	<sql id="announcementColumn">
		${mark}.an_id,${mark}.title,${mark}.content,${mark}.createtime
	</sql>
	<resultMap type="Announcement" id="announcementMap">
		<id property="id" column="an_id"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="createTime" column="createtime"/>
	</resultMap>
	<select id="findAllAnnouncement" resultMap="announcementMap">
		select
		<include refid="announcementColumn">
			<property name="mark" value="announcement"/>
		</include>
		from announcement
	</select>
	<select id="findAnnouncementById" resultMap="announcementMap" parameterType="Integer">
		select
		<include refid="announcementColumn">
			<property name="mark" value="announcement"/>
		</include>
		from announcement where an_id=#{id}
	</select>
	<insert id="insertAnnouncement" parameterType="Announcement" useGeneratedKeys="true" keyColumn="an_id" flushCache="true">
		insert into announcement
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="title != null and title != ''">title,</if>
			<if test="content != null">content,</if>
			<if test="createTime != null">createtime,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="title != null and title != ''">#{title},</if>
			<if test="content != null">#{content},</if>
			<if test="createTime != null">#{createTime},</if>
		</trim>
	</insert>
	<delete id="deleteAnnouncement" parameterType="Integer" flushCache="true">
		delete from announcement where an_id=#{id}
	</delete>
	<update id="updateAnnouncement" parameterType="Announcement" flushCache="true">
		update announcement
		<set>
			<if test="title != null and title != ''">title=#{title},</if>
			<if test="content != null">content=#{content},</if>
			<if test="createTime != null">createtime=#{createTime},</if>
		</set>
		where an_id=#{id}
	</update>
</mapper>